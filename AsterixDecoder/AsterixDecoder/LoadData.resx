<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAABmUExURf///wAAAJSUlNzc3M/Pz+Dg4PDw8MLCwhgYGOXl5ZKSko+Pj+jo6Ovr6yUlJdnZ2TU1
        NR0dHRISEvj4+IGBgZycnCwsLExMTLCwsBYWFiAgIL6+vnp6eicnJ1xcXISEhKenpzo6OkCNJbUAAAQq
        SURBVHhe7d1rU9pAGIZhQBQQkEPAA6Xa/v8/2XZ8O0q7SXaz7+Ghfe4vnY662WvYkI2ojBhjjDHGGGOM
        MfYf16w2U73uZFSUmi/n7Vi1h5UMDdF6uZN5KfawltEBOsqclNujLNSF8vL8aI+xUKcyHYu+LuQgkVkC
        Ic7FG5mKWdHnYvMoEzFrF3wunmUehn0NJd7KLEybRy7UV5mEcXFPNy4P4c8ewi4aE5mBeWEXjSeZgH1B
        G7i1HN6jl5Bn1I0c3aWQc/FZDu5TxLlodNPUmj8x8VR6OE7qepOBUp3cz8WE8FY+NLiFDJTMfQOXEN7I
        hwbXvYl4cb5o+Au9z8UIoe9FI0Loe9EIEbre9QcJHTdwQULHi0aUcLzzOhfDhG4XjUDhyeeiESh0emUq
        Uuhz1x8qdHnZJlbosYELFo5P5s+o0UL7DVy8cG58LsYLrTdwAELjl20QhLYbOAyh5QYOQ2i5gQMRGm7g
        UIR2GzgYodkGDkdotYEDEhpdNKCEJj93AyU02cBhCS1etgETGpyLcEL1iwacUP1lGzyh9l0/olD3ZRtE
        oe65CCkc38tIGmEKJzKSRhQOicL+KCyJwiFR2B+6sJkV9U2O+yl0YWGJh/wfEyZ+sYzCkih0iMLKKHSI
        wsoodIjCyih0iMLKKHSIwsoodIjCyih0iMLKKHSIwsoUhTP5t7SrEU6G/gTFtQh/DTSMeCXC93GW8r+i
        rkP4e5ghxKsQfowyYKFeg/DzIOXEKxBejlG8UPGFfw5RSoQX/j1C4UJFFyYGKHwUwYUpYCERW5gGli1U
        aGEbsIiILLyXr0iVv1CBhV3AAiKusH2Jvpe7UGGFfcBsIqqwH5i7UEGFOcBMIqYwD5i3UCGFucCsRxFR
        mA/MIQIKS4AZCxVPWAbsJ8IJS4G9CxVNWA7sI4IJhwB7FiqWcBiwmwglHArsXKhIwuHArkcRSFgD7CDi
        COuA7QsVRlgLbCWiCOuBbQsVRKgBbCFiCLu/6ZRfaqFCCI/jeaLdXr4i1X4nn3VRau4QwvVdqmYpX5Fq
        2chnXZb40ywozzSpuk7O/ElSWBmFnVGYF4WVUdgZhXlRWBmFnVGYF4WVUdgZhXlRWBmFnVGYF4WVUdgZ
        hXlRWFmVsPO7+vI5/SEL7xbt5f9hdWShThRWRqFDFFZGoUP+wlv5kFf+fyn5cJx4djzIcT+lKTzKmFgd
        ZXYaPcuYWD3L7DTayJhYbWR2Gq1lTKxU3/LpSQZF6knmplPiyTQ8zadSjbdq0E/5ivwqw+L0KjPTCu9B
        VN9UJfYUoR1kXno1jzI0Ro+NzEuxxOY+MJNbm6kMjtBU5qQcDtEIOBotvssRYtsavos8xG2U5k1TovXy
        JAeKaf5m8qbVFzWz81YO5932PDO4SCRrVpupd5uVl44xxhhjjDHGGGN4jUY/AEygUURI+CfbAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>