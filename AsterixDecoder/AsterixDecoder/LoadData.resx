<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAGZQTFRF////
        AAAAlJSU3Nzcz8/P4ODg8PDwwsLCGBgY5eXlkpKSj4+P6Ojo6+vrJSUl2dnZNTU1HR0dEhIS+Pj4gYGB
        nJycLCwsTExMsLCwFhYWICAgvr6+enp6JycnXFxchISEp6enOjo6QI0ltQAABCpJREFUeF7t3WtT2kAY
        hmFAFBCQQ8ADpdr+/z/Zdnw7SrtJdrPv4aF97i+djrrZa9iQjaiMGGOMMcYYY4wx9h/XrDZTve5kVJSa
        L+ftWLWHlQwN0Xq5k3kp9rCW0QE6ypyU26Ms1IXy8vxoj7FQpzIdi74u5CCRWQIhzsUbmYpZ0edi8ygT
        MWsXfC6eZR6GfQ0l3sosTJtHLtRXmYRxcU83Lg/hzx7CLhoTmYF5YReNJ5mAfUEbuLUc3qOXkGfUjRzd
        pZBz8VkO7lPEuWh009SaPzHxVHo4Tup6k4FSndzPxYTwVj40uIUMlMx9A5cQ3siHBte9iXhxvmj4C73P
        xQih70UjQuh70QgRut71BwkdN3BBQseLRpRwvPM6F8OEbheNQOHJ56IRKHR6ZSpS6HPXHyp0edkmVuix
        gQsWjk/mz6jRQvsNXLxwbnwuxgutN3AAQuOXbRCEths4DKHlBg5DaLmBAxEabuBQhHYbOBih2QYOR2i1
        gQMSGl00oIQmP3cDJTTZwGEJLV62ARManItwQvWLBpxQ/WUbPKH2XT+iUPdlG0Sh7rkIKRzfy0gaYQon
        MpJGFA6Jwv4oLInCIVHYH7qwmRX1TY77KXRhYYmH/B8TJn6xjMKSKHSIwsoodIjCyih0iMLKKHSIwsoo
        dIjCyih0iMLKKHSIwsoodIjCyhSFM/m3tKsRTob+BMW1CH8NNIx4JcL3cZbyv6KuQ/h7mCHEqxB+jDJg
        oV6D8PMg5cQrEF6OUbxQ8YV/DlFKhBf+PULhQkUXJgYofBTBhSlgIRFbmAaWLVRoYRuwiIgsvJevSJW/
        UIGFXcACIq6wfYm+l7tQYYV9wGwiqrAfmLtQQYU5wEwipjAPmLdQIYW5wKxHEVGYD8whAgpLgBkLFU9Y
        BuwnwglLgb0LFU1YDuwjggmHAHsWKpZwGLCbCCUcCuxcqEjC4cCuRxFIWAPsIOII64DtCxVGWAtsJaII
        64FtCxVEqAFsIWIIu7/plF9qoUIIj+N5ot1eviLVfiefdVFq7hDC9V2qZilfkWrZyGddlvjTLCjPNKm6
        Ts78SVJYGYWdUZgXhZVR2BmFeVFYGYWdUZgXhZVR2BmFeVFYGYWdUZgXhZVR2BmFeVFYWZWw87v68jn9
        IQvvFu3l/2F1ZKFOFFZGoUMUVkahQ/7CW/mQV/5/KflwnHh2PMhxP6UpPMqYWB1ldho9y5hYPcvsNNrI
        mFhtZHYarWVMrFTf8ulJBkXqSeamU+LJNDzNp1KNt2rQT/mK/CrD4vQqM9MK70FU31Ql9hShHWReejWP
        MjRGj43MS7HE5j4wk1ubqQyO0FTmpBwO0Qg4Gi2+yxFi2xq+izzEbZTmTVOi9fIkB4pp/mbyptUXNbPz
        Vg7n3fY8M7hIJGtWm6l3m5WXjjHGGGOMMcYYY3iNRj8ATKBRREj4J9sAAAAASUVORK5CYII=
</value>
  </data>
</root>